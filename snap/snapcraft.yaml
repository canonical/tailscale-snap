name: tailscale
base: core24
version: 1.84.0
license: BSD-3-Clause
grade: stable
confinement: strict
contact: solutions-engineering@lists.canonical.com
issues: https://github.com/canonical/tailscale-snap/issues
source-code: https://github.com/canonical/tailscale-snap
summary: The easiest, most secure way to use WireGuard and 2FA
description: |
  A secure network that just works Zero config VPN.

  Installs on any device in minutes, manages firewall rules for you, and works from anywhere.

  After installing this snap, visit the Tailscale documentation at https://tailscale.com/kb/1017/install to get started.

  **Confinement**

  The snap is strictly confined, and this currently brings some limitations.

  * `tailscale ssh` will not work.
  * `ssh` over the tailscale network will not work if tailscale ssh mode is enabled (ie. if you have configured `tailscale set --ssh`). To fix this, disable tailscale ssh: `tailscale set --ssh=false`.
  * `tailscale update` will not work: to update tailscale, please refresh the snap.
  * `tailscale file cp` and `tailscale cert` will only work with file paths accessible to the snap, for example `/home/ubuntu/snap/tailscale/common/foo.txt`. See https://snapcraft.io/docs/data-locations for a full list of paths.
  * `tailscale drive share` will not work (the client command succeeds, the share is registered, but you will see errors in tailscaled logs and the share will not be accessible).

  **Security**

  See https://github.com/canonical/tailscale-snap/blob/main/docs/security-reference.md
  for security and hardening documentation.

  **Support**

  If any malfunction with Tailscale features is observed, where this issue is not observed in Tailscale installed from a source other than the snap, please open an issue at https://github.com/canonical/tailscale-snap/issues .
  To report something related to Tailscale itself, please see https://github.com/tailscale/tailscale/issues .

  This snap is maintained by Canonical, and is not necessarily endorsed or officially maintained by the upstream developers.

platforms:
  amd64:
  arm64:

plugs:
  sys-devices-virtual-dmi-ids:
    interface: system-files
    read:
      # Tailscale uses this to figure out if running in VM and if so, which Public Cloud
      # https://github.com/tailscale/tailscale/blob/65fe0ba7b50928eff53e2750ff2d583e4a33eb7e/util/cloudenv/cloudenv.go#L115-L126
      # Note that the paths in the source code are symlinks to the corresponding paths below,
      # so we don't need to include the symlinks, just the target files:
      - /sys/devices/virtual/dmi/id/bios_vendor
      - /sys/devices/virtual/dmi/id/product_name
      - /sys/devices/virtual/dmi/id/sys_vendor

slots:
  # Share the socket directory to support the case where another snap needs to communicate with tailscaled.
  socket:
    interface: content
    content: writable-data
    write:
      - $SNAP_COMMON/socket

apps:
  tailscale:
    command: bin/tailscale --socket $SNAP_COMMON/socket/tailscaled.sock
    plugs:
      - network
      - network-bind
  tailscaled:
    # NOTE: cannot use layout to support default socket location, because /var/run is not allowed for layout.
    command: bin/tailscaled --socket $SNAP_COMMON/socket/tailscaled.sock --statedir $SNAP_COMMON --verbose 10
    daemon: simple
    plugs:
      - firewall-control
      - network
      - network-bind
      - network-control
      - sys-devices-virtual-dmi-ids

parts:
  tailscale:
    source: https://github.com/tailscale/tailscale.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    plugin: go
    build-snaps:
      - go
    override-build: |
      ./build_dist.sh -p $CRAFT_PARALLEL_BUILD_COUNT -o $CRAFT_PART_INSTALL/bin/ ./cmd/tailscale
      ./build_dist.sh -p $CRAFT_PARALLEL_BUILD_COUNT -o $CRAFT_PART_INSTALL/bin/ ./cmd/tailscaled
